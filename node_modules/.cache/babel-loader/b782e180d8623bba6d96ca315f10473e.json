{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alex/tech-task/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nlet Form = () => {\n  _s();\n\n  const [nums, setNums] = useState();\n  const [date, setDate] = useState();\n  useEffect(e => {\n    //console.log(nums)\n    console.log(date);\n  }); //Card nums validation\n\n  if (/[0-9]{16}$/.test(nums)) {\n    console.log(true);\n  } else console.log(false); //Card date spliting by slash\n\n\n  if (date.length > 2) {\n    date.split('/').join('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"cardNumber\",\n      value: nums,\n      type: \"text\",\n      placeholder: \"Card number\",\n      onChange: event => setNums(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"cardDate\",\n      value: date,\n      type: \"text\",\n      placeholder: \"MM/YY\",\n      maxLength: \"4\",\n      onChange: event => setDate(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"cardCVV\",\n      type: \"text\",\n      placeholder: \"CVV2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"ArghxTD3quY/kFtD1s2FJ0Y1dEE=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/alex/tech-task/src/Form.js"],"names":["React","useState","useEffect","Form","nums","setNums","date","setDate","e","console","log","test","length","split","join","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,IAAIC,IAAI,GAAG,MAAM;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AAIDC,EAAAA,SAAS,CAAEM,CAAD,IAAO;AACb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,GAHQ,CAAT,CAPc,CAYb;;AACA,MAAI,aAAaK,IAAb,CAAkBP,IAAlB,CAAJ,EAA6B;AACzBK,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,GAFD,MAGMD,OAAO,CAACC,GAAR,CAAY,KAAZ,EAhBO,CAkBb;;;AAEA,MAAIJ,IAAI,CAACM,MAAL,GAAc,CAAlB,EAAqB;AACjBN,IAAAA,IAAI,CAACO,KAAL,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BACI;AAAO,MAAA,SAAS,EAAG,YAAnB;AAAgC,MAAA,KAAK,EAAIV,IAAzC;AAA+C,MAAA,IAAI,EAAG,MAAtD;AAA6D,MAAA,WAAW,EAAG,aAA3E;AAAyF,MAAA,QAAQ,EAAGW,KAAD,IAAWV,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd;AAArH;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAG,UAAnB;AAA8B,MAAA,KAAK,EAAIX,IAAvC;AAA6C,MAAA,IAAI,EAAG,MAApD;AAA2D,MAAA,WAAW,EAAG,OAAzE;AAAiF,MAAA,SAAS,EAAC,GAA3F;AAA+F,MAAA,QAAQ,EAAGS,KAAD,IAAWR,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA3H;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,SAAS,EAAG,SAAnB;AAA6B,MAAA,IAAI,EAAG,MAApC;AAA2C,MAAA,WAAW,EAAG;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA/BD;;GAAId,I;;KAAAA,I;AAiCJ,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nlet Form = () => {\n\n    const [nums, setNums] = useState()\n    const [date, setDate] = useState()\n\n\n\n   useEffect((e) => {\n       //console.log(nums)\n       console.log(date)\n   })\n\n    //Card nums validation\n    if (/[0-9]{16}$/.test(nums)) {\n        console.log(true)\n    }\n    else  console.log(false)\n\n    //Card date spliting by slash\n\n    if (date.length > 2) {\n        date.split('/').join('')\n    }\n\n    return (\n        <div className = 'form'>\n            <input className = 'cardNumber' value = {nums} type = 'text' placeholder = 'Card number' onChange={(event) => setNums(event.target.value)}/>\n            <input className = 'cardDate' value = {date} type = 'text' placeholder = 'MM/YY' maxLength=\"4\" onChange={(event) => setDate(event.target.value)}/>\n            <input className = 'cardCVV' type = 'text' placeholder = 'CVV2'/>\n        </div>\n    )\n}\n\nexport default Form\n\n"]},"metadata":{},"sourceType":"module"}