{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alex/tech-task/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nlet Form = () => {\n  _s();\n\n  const [nums, setNums] = useState();\n  const [date, setDate] = useState();\n  let styleNums;\n\n  if (/^[0-9]{16}$/.test(nums)) {\n    styleNums = {\n      border: '1px solid #00ff35'\n    };\n  } else if (!/^[0-9]{16}$/.test(nums)) {\n    console.log('Invalid card number');\n    styleNums = {\n      border: '1px solid #ff004b'\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: styleNums,\n      className: \"cardNumber\",\n      value: nums,\n      type: \"text\",\n      placeholder: \"Card number\",\n      maxLength: \"16\",\n      onChange: event => setNums(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"cardDate\",\n      type: \"text\",\n      placeholder: \"MM/YY\",\n      maxLength: \"4\",\n      onChange: event => setDate(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"cardCVV\",\n      type: \"text\",\n      placeholder: \"CVV2\",\n      maxLength: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"qWyv/diLTDbHPd2HU5NABQ4pS2k=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/alex/tech-task/src/Form.js"],"names":["React","useState","Form","nums","setNums","date","setDate","styleNums","test","border","console","log","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,IAAIC,IAAI,GAAG,MAAM;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAMA,MAAIM,SAAJ;;AAGA,MAAI,cAAcC,IAAd,CAAmBL,IAAnB,CAAJ,EAA8B;AAC1BI,IAAAA,SAAS,GAAG;AACRE,MAAAA,MAAM,EAAE;AADA,KAAZ;AAGH,GAJD,MAKK,IAAI,CAAC,cAAcD,IAAd,CAAmBL,IAAnB,CAAL,EAA+B;AAChCO,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAJ,IAAAA,SAAS,GAAG;AACRE,MAAAA,MAAM,EAAE;AADA,KAAZ;AAGH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BACI;AAAO,MAAA,KAAK,EAAEF,SAAd;AAAyB,MAAA,SAAS,EAAG,YAArC;AAAkD,MAAA,KAAK,EAAIJ,IAA3D;AAAiE,MAAA,IAAI,EAAG,MAAxE;AAA+E,MAAA,WAAW,EAAG,aAA7F;AAA2G,MAAA,SAAS,EAAG,IAAvH;AAA4H,MAAA,QAAQ,EAAGS,KAAD,IAAWR,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAxJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAG,UAAnB;AAA8B,MAAA,IAAI,EAAG,MAArC;AAA4C,MAAA,WAAW,EAAG,OAA1D;AAAkE,MAAA,SAAS,EAAG,GAA9E;AAAkF,MAAA,QAAQ,EAAGF,KAAD,IAAWN,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA9G;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,SAAS,EAAG,SAAnB;AAA6B,MAAA,IAAI,EAAG,MAApC;AAA2C,MAAA,WAAW,EAAG,MAAzD;AAAgE,MAAA,SAAS,EAAG;AAA5E;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAhCD;;GAAIZ,I;;KAAAA,I;AAkCJ,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\n\nlet Form = () => {\n\n    const [nums, setNums] = useState()\n    const [date, setDate] = useState()\n\n\n\n\n\n    let styleNums\n\n\n    if (/^[0-9]{16}$/.test(nums)) {\n        styleNums = {\n            border: '1px solid #00ff35'\n        }\n    }\n    else if (!/^[0-9]{16}$/.test(nums)) {\n        console.log('Invalid card number')\n        styleNums = {\n            border: '1px solid #ff004b'\n        }\n    }\n\n\n    return (\n        <div className = 'form'>\n            <input style={styleNums} className = 'cardNumber' value = {nums} type = 'text' placeholder = 'Card number' maxLength = '16' onChange={(event) => setNums(event.target.value)}/>\n            <input className = 'cardDate' type = 'text' placeholder = 'MM/YY' maxLength = '4' onChange={(event) => setDate(event.target.value)}/>\n            <input className = 'cardCVV' type = 'text' placeholder = 'CVV2' maxLength = '3' />\n        </div>\n    )\n}\n\nexport default Form\n\n"]},"metadata":{},"sourceType":"module"}